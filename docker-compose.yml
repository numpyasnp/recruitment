version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ik_postgres
    environment:
      POSTGRES_DB: ik_recruitment
      POSTGRES_USER: ik_user
      POSTGRES_PASSWORD: ik_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ik_user -d ik_recruitment"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache & Message Broker
  redis:
    image: redis:7-alpine
    container_name: ik_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Web Application
  web:
    build: .
    container_name: ik_web
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=ik_recruitment
      - DB_USER=ik_user
      - DB_PASSWORD=ik_password
      - DB_HOST=postgres
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker
  celery_worker:
    build: .
    container_name: ik_celery_worker
    command: celery -A recruitment worker --loglevel=info
    volumes:
      - .:/app
    environment:
      - DEBUG=True
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=ik_recruitment
      - DB_USER=ik_user
      - DB_PASSWORD=ik_password
      - DB_HOST=postgres
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      web:
        condition: service_healthy

  # Celery Beat (Scheduler)
  celery_beat:
    build: .
    container_name: ik_celery_beat
    command: celery -A recruitment beat --loglevel=info
    volumes:
      - .:/app
    environment:
      - DEBUG=True
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=ik_recruitment
      - DB_USER=ik_user
      - DB_PASSWORD=ik_password
      - DB_HOST=postgres
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      web:
        condition: service_healthy

  # Flower (Celery Monitoring)
  flower:
    build: .
    container_name: ik_flower
    command: celery -A recruitment flower --port=5555
    volumes:
      - .:/app
    ports:
      - "5555:5555"
    environment:
      - DEBUG=True
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=ik_recruitment
      - DB_USER=ik_user
      - DB_PASSWORD=ik_password
      - DB_HOST=postgres
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      web:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data:
